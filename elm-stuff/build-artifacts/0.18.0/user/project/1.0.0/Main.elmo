var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$viewData = function (model) {
	var message = function () {
		var _p0 = model.txdata;
		if (_p0.ctor === 'Just') {
			var _p1 = _p0._0;
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_p1.status,
				A2(_elm_lang$core$Basics_ops['++'], ' ', _p1.data));
		} else {
			return 'no data available';
		}
	}();
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(message),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$viewValidation = function (model) {
	var _p2 = function () {
		var _p3 = model.address;
		if (_p3.ctor === 'Just') {
			return {ctor: '_Tuple2', _0: 'green', _1: 'OK'};
		} else {
			return {ctor: '_Tuple2', _0: 'red', _1: 'Invalid address'};
		}
	}();
	var color = _p2._0;
	var message = _p2._1;
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'color', _1: color},
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(message),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$TxData = F2(
	function (a, b) {
		return {status: a, data: b};
	});
var _user$project$Main$decodeTransactions = A3(
	_elm_lang$core$Json_Decode$map2,
	_user$project$Main$TxData,
	A2(_elm_lang$core$Json_Decode$field, 'status', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'data', _elm_lang$core$Json_Decode$string));
var _user$project$Main$Model = F2(
	function (a, b) {
		return {address: a, txdata: b};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A2(_user$project$Main$Model, _elm_lang$core$Maybe$Nothing, _elm_lang$core$Maybe$Nothing),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$Transactions = function (a) {
	return {ctor: 'Transactions', _0: a};
};
var _user$project$Main$getTransactions = function (a) {
	var url = A2(_elm_lang$core$Basics_ops['++'], 'http://btc.blockr.io/api/v1/address/txs/', a);
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Main$Transactions,
		A2(_elm_lang$http$Http$get, url, _user$project$Main$decodeTransactions));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p4 = msg;
		if (_p4.ctor === 'Change') {
			var _p5 = _user$project$Bitcoin$toAddress(_p4._0);
			if (_p5.ctor === 'Just') {
				var _p6 = _p5._0;
				return {
					ctor: '_Tuple2',
					_0: A2(
						_user$project$Main$Model,
						_elm_lang$core$Maybe$Just(_p6),
						_elm_lang$core$Maybe$Nothing),
					_1: _user$project$Main$getTransactions(_p6)
				};
			} else {
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			}
		} else {
			if (_p4._0.ctor === 'Ok') {
				return {
					ctor: '_Tuple2',
					_0: A2(
						_user$project$Main$Model,
						model.address,
						_elm_lang$core$Maybe$Just(_p4._0._0)),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			} else {
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			}
		}
	});
var _user$project$Main$Change = function (a) {
	return {ctor: 'Change', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('blockchain viewer'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('text'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$placeholder('Bitcoin address'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$Change),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: _user$project$Main$viewValidation(model),
					_1: {
						ctor: '::',
						_0: _user$project$Main$viewData(model),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
